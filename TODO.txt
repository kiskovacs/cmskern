---------------
TO-DO List
---------------

* Anlegen/Hochladen von Bildern in Richtext Editor Auswahl (on-the-fly)

* Problem: Initialisierung der Werte in ... benötigen absolute contentNode Ref
  - tinyMCE        angular-widgets.js: L734 (var inHTML = "...";)
  - datepicker

* "Cancel" Button soll nicht speichern :)

* fileuploader.js und .css raus aus main.html
  => werden nur in ContentNodes/blank und edit verwendet
  => gemeinsame base page für content editieren (Sammelbecken js & css)

* Verify that JSON is valid, before Saving Content Type
  => otherwise you could end up not being able to access content any more

* Startanzahl von Kindern bei "repeatable" Typen über das Schema steuerbar machen

* Erlauben Kinder von unterschiedlichem Typ hinzuzufügen (über Dropdown Box)

* Einlesen von ContentNode Testdaten, angetriggert von Bootstraper
  (oder reicht das Einlesen der Content Type Definitionen?)

* index Seite: highlighId in den Flash Scope packen, damit dieser nicht immer wieder
  bei einem Refresh auftaucht

* Innerhalb eines Callouts erlauben auch ein neues Element ("on-the-fly") anzulegen

* Kann ContentNode statt selbstgeschriebenen MongoDB Zugriff auch über Morphia laufen?
  sollte es besser von BasicDBObject erben?

* Verwende Play! Routen für Verlinkung der Seiten

* error Handling in ajax Callbacks verbessern (und in Controllern gegenprüfen)

* Validierung
      { "name": "state", "size": 2, "ng:validate": "regexp:validatorRegExps.state" },
      { "name": "zip",   "size": 5, "ng:validate": "number" }

* Wenn URL in flickr gesetzt, dann könnte ein Preview beim Öffnen des Dialogs angezeigt werden


---------------
Modellierung
---------------

* For Asset
    * Should the thumbnails better stored in a separate GridFS collection?
      (how efficient is MongoDB $exists, even in 2.0 with using indexes)

* For ContentType
    * no special / white chars allowed as part of name
    * RegExp validation auf dem Namensfeld

* For ContentNode
    * jsonForm has to be valid JSON
      (custom validator?)


---------------
IDEAS
---------------

* Visualize JSON Differences
  for example using jsondiff: http://tlrobinson.net/projects/js/jsondiff/

* More elegant Upload of files (jQuery File Upload Plugin)
  https://github.com/blueimp/jQuery-File-Upload/wiki
  oder http://www.uploadify.com/
  oder http://valums.com/ajax-upload/


---------------
DONE
---------------

* Content Typen anpassen:
  -> Article: mit boolean und fixed vocabular & Verweis auf Bild (als Callout)
  -> Image: callout dort entsprechend ausbauen

* Referenzen auf Bilder in Richtext Editor
  => tinyMCE Plugin

* Richtext Editor integrieren (z.B. tinyMCE ...)

* Auch wenn Referenzfeld, trotzdem Eingabe erlauben (nicht disablen)

* Beispiel für drop-down mit fest vorbelegten Werten
  => http://docs-next.angularjs.org/api/angular.widget.select

* Date Felder zu den erlaubten Typen aufnehmen

* Unterschiedliche Textlängen für Input Fields unterstützen (z.B. min, small, medium)
  => Textklassen, die dann von Bootstrap ausgewertet werden

* Up/Down Buttons for "repeatable" Types, um die Reihenfolge von Kindern zu manipulieren
